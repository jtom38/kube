---
# Notes:
# To use the secret you will need to make a new secret and store your value in it
# >kubectl create secret generic SecretNameHere
# You will now need to take your secret that you want to store and convert it to base64
# > echo "yourSecret" | base64
# Copy the output to your clipboard
# > kubectl edit secret SecretKeyName
# Append the following to the bottom of the file.
# data:
#   url: base64CodeHere
#
# Save it

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: cron-media-rad-config-backup
spec:
  schedule: "10 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: backup
            image: jtom38/cron-backup:0.0.8
            imagePullPolicy: IfNotPresent
            args:
            - python3
            - /scripts/backup.py
            env:
              - name: BACKUP_JOB
                value: 'media-rad-config'
              - name: BACKUP_SOURCE
                value: '/config'
              - name: BACKUP_DEST
                value: '/backup'
              - name: BACKUP_USERNAME
                value: 'Kubernetes'
              - name: BACKUP_MAXAGEDAYS
                value: '30'
              - name: BACKUP_DEBUG
                value: 'true'
              - name: BACKUP_WEBHOOK
                valueFrom:
                  secretKeyRef:
                    name: discord-alerts-url
                    key: url
            volumeMounts:
              - name: data
                mountPath: /config
              - name: backup
                mountPath: /backup
          restartPolicy: OnFailure

          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: media-rad-config-pvc 

            - name: backup
              persistentVolumeClaim:
                claimName: media-rad-config-backup-pvc

---
apiVersion: v1
kind: PersistentVolume

metadata:
  name: media-rad-config-backup

spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: media-rad-config-backup
  nfs:
    path: /kube/backup/
    server: 192.168.1.85

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: media-rad-config-backup-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: media-rad-config-backup
  resources:
    requests:
      storage: 10Gi
